# Load aliases only in interactive shells
[[ $- != *i* ]] && return

# ==============================================================================
#  General & System Aliases
# ==============================================================================

# Use GNU `ls` if available (from `brew install coreutils`), otherwise use macOS `ls`.
if command -v gls &>/dev/null; then
  alias ls='gls --color=auto'
  alias la='gls -lha --color=auto'
else
  alias ls='ls -G'
  alias la='ls -lhaG'
fi

alias nano='nano --linenumbers'      # Always show line numbers in nano.

# Smarter cat: use bat if available, else fallback to real cat
cat() {
  if command -v bat >/dev/null 2>&1; then
    bat -pp "$@"
  else
    command cat "$@"
  fi
}

command -v networkQuality >/dev/null 2>&1 && alias netcheck='networkQuality'
alias s='pmset displaysleepnow'      # Put the display to sleep immediately.
alias v='source .venv/bin/activate'  # Activate a Python virtual environment.
alias zmount='sudo zfs mount -a'

# ==============================================================================
#  Productivity & Fun Aliases
# ==============================================================================

alias shrug="echo '¯\_(ツ)_/¯' | pbcopy"
alias pw='pwgen -s -1 19 | pbcopy' # Generate a secure password and copy to clipboard.
alias art='ascii-image-converter'
alias decrypt='gpg --decrypt ' # Trailing space enables filename completion.

# ==============================================================================
#  File & Directory Management
# ==============================================================================

alias dempty='~/.local/bin/remove_empty_dirs.sh '  # Trailing space enables path completion

# ==============================================================================
#  Homebrew & Development Aliases
# ==============================================================================

alias brewses='brew uses --installed '
alias dump='brew bundle dump --force --file=~/mrk1/assets/Brewfile && cp -fv ~/mrk1/assets/Brewfile ~/'
alias fixbrewperms='echo "⚠️  Fixing Homebrew permissions..." && sudo chown -R $(whoami) -- /opt/homebrew'
alias update='topgrade'

# ==============================================================================
#  Utility Functions
# ==============================================================================

# Reload the shell completely for a clean state.
c() {
  echo "Reloading shell..."
  clear && exec zsh
}

# Run the Minecraft server with Aikar's flags.
mc() {
  echo "Starting Minecraft 1.21.5 server..."
  if ! command -v java >/dev/null 2>&1; then
    echo "❌ Java not found. Please install Java before running the Minecraft server."
    return 1
  fi
  (
    cd ~/mcservers/1.21.5 && \
    java -Xms10G -Xmx10G \
      -XX:+UseG1GC \
      -XX:+ParallelRefProcEnabled \
      -XX:MaxGCPauseMillis=200 \
      -XX:+UnlockExperimentalVMOptions \
      -XX:+DisableExplicitGC \
      -XX:+AlwaysPreTouch \
      -XX:G1NewSizePercent=30 \
      -XX:G1MaxNewSizePercent=40 \
      -XX:G1HeapRegionSize=8M \
      -XX:G1ReservePercent=20 \
      -XX:G1HeapWastePercent=5 \
      -XX:G1MixedGCCountTarget=4 \
      -XX:InitiatingHeapOccupancyPercent=15 \
      -XX:G1MixedGCLiveThresholdPercent=90 \
      -XX:G1RSetUpdatingPauseTimePercent=5 \
      -XX:SurvivorRatio=32 \
      -XX:+PerfDisableSharedMem \
      -XX:MaxTenuringThreshold=1 \
      -Dusing.aikars.flags=https://mcflags.emc.gs \
      -Daikars.new.flags=true \
      -jar paper.jar
  )
}

pushit() {
  local commit_message
  commit_message="${1:-Auto-commit on $(date '+%Y-%m-%d %H:%M')}"

  echo "Syncing with remote..."
  git pull --rebase || return 1

  git add .
  if git diff --cached --quiet; then
    echo "No changes to commit."
  else
    git commit -m "$commit_message"
    git push
  fi
}

# --- mrk1 maintenance passthrough ---
maint() { command mrk1-maint "$@"; }
