# ==============================================================================
#  General & System Aliases
# ==============================================================================

# Use GNU `ls` if available (from `brew install coreutils`), otherwise use macOS `ls`.
if command -v gls &>/dev/null; then
  alias ls='gls --color=auto'
  alias la='gls -lha --color=auto'
else
  alias ls='ls -G'
  alias la='ls -lhaG'
fi

alias nano='nano --linenumbers'      # Always show line numbers in nano.
alias cat='bat'                      # Use `bat` for 'cat' with syntax highlighting.
alias netcheck='networkQuality'      # Measure network responsiveness.
alias s='pmset displaysleepnow'      # Put the display to sleep immediately.
alias v='source .venv/bin/activate'  # Activate a Python virtual environment.

# ==============================================================================
#  Productivity & Fun Aliases
# ==============================================================================

alias shrug="echo '¯\_(ツ)_/¯' | pbcopy"
alias pw='pwgen -s -1 19 | pbcopy' # Generate a secure password and copy to clipboard.
alias art='ascii-image-converter'
alias pub="gpg --armor --export 7morris@gmail.com | pbcopy"
alias decrypt='gpg --decrypt ' # Trailing space allows for filename completion.

# ==============================================================================
#  File & Directory Management
# ==============================================================================

alias delempty='~/.local/bin/remove_empty_dirs.sh '
# Use the more efficient -delete flag for find.
alias dsx='find ~/Documents/Floppy_Letters -name ".DS_Store" -depth -delete'

# Define functions for multi-step commands for better clarity and error handling.
fl() {
  echo "Cleaning .DS_Store files and changing directory..."
  dsx && cd ~/Documents/Floppy_Letters/fl_2025
}

flup() {
  echo "Cleaning .DS_Store files and uploading via scp..."
  dsx && scp -r ~/Documents/Floppy_Letters/fl_2025 sev@192.168.6.22:~/
}

# ==============================================================================
#  Homebrew & Development Aliases
# ==============================================================================

alias brewup='brew update && brew upgrade && brew autoremove && brew cleanup --prune=all && brew doctor'
alias bruses='brew uses --installed '
alias dump='brew bundle dump --force --file=~/mrk1/assets/Brewfile && cp -fv ~/mrk1/assets/Brewfile ~/'
# Renamed 'f' to a safer, more descriptive name.
alias fixbrewperms='sudo chown -R $(whoami) /opt/homebrew'

# Ultimate update alias
alias update='topgrade' # Topgrade already runs `brew update` and more.

# ==============================================================================
#  Utility Functions
# ==============================================================================

# Reload the shell completely for a clean state.
c() {
  echo "Reloading shell..."
  exec zsh
}

# Run the Minecraft server with Aikar's flags.
# A function is better here for readability and future flexibility.
mc() {
  echo "Starting Minecraft 1.21.5 server..."
  (
    cd ~/mcservers/1.21.5 && \
    java -Xms10G -Xmx10G \
      -XX:+UseG1GC \
      -XX:+ParallelRefProcEnabled \
      -XX:MaxGCPauseMillis=200 \
      -XX:+UnlockExperimentalVMOptions \
      -XX:+DisableExplicitGC \
      -XX:+AlwaysPreTouch \
      -XX:G1NewSizePercent=30 \
      -XX:G1MaxNewSizePercent=40 \
      -XX:G1HeapRegionSize=8M \
      -XX:G1ReservePercent=20 \
      -XX:G1HeapWastePercent=5 \
      -XX:G1MixedGCCountTarget=4 \
      -XX:InitiatingHeapOccupancyPercent=15 \
      -XX:G1MixedGCLiveThresholdPercent=90 \
      -XX:G1RSetUpdatingPauseTimePercent=5 \
      -XX:SurvivorRatio=32 \
      -XX:+PerfDisableSharedMem \
      -XX:MaxTenuringThreshold=1 \
      -Dusing.aikars.flags=https://mcflags.emc.gs \
      -Daikars.new.flags=true \
      -jar paper.jar
  )
}

# Push current directory to GitHub with a commit message.
pushit() {
  local commit_message
  # Use the first argument as a commit message, or default to a timestamp.
  commit_message="${1:-Auto-commit on $(date '+%Y-%m-%d %H:%M')}"

  echo "Syncing with remote..."
  git pull --rebase && \
  git add . && \
  git commit -m "$commit_message" && \
  git push
}
